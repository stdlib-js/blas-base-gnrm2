{
  "version": 3,
  "sources": ["../lib/accessors.js", "../lib/ndarray.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar pow = require( '@stdlib/math-base-special-pow' );\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} L2-norm\n*\n* @example\n* var toAccessorArray = require( '@stdlib/array-base-to-accessor-array' );\n* var arraylike2object = require( '@stdlib/array-base-arraylike2object' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2( 4, arraylike2object( toAccessorArray( x ) ), 2, 1 );\n* // returns 5.0\n*/\nfunction gnrm2( N, x, stride, offset ) {\n\tvar scale;\n\tvar buf;\n\tvar get;\n\tvar ssq;\n\tvar ax;\n\tvar ix;\n\tvar i;\n\n\tbuf = x.data;\n\tget = x.accessors[ 0 ];\n\n\tix = offset;\n\tif ( N === 1 ) {\n\t\treturn abs( get( buf, ix ) );\n\t}\n\tif ( stride === 0 ) {\n\t\treturn sqrt( N ) * abs( get( buf, ix ) );\n\t}\n\tscale = 0.0;\n\tssq = 1.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( get( buf, ix ) !== 0.0 ) {\n\t\t\tax = abs( get( buf, ix ) );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = 1.0 + ( ssq * pow( scale/ax, 2 ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq += pow( ax/scale, 2 );\n\t\t\t}\n\t\t}\n\t\tix += stride;\n\t}\n\treturn scale * sqrt( ssq );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gnrm2;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar arraylike2object = require( '@stdlib/array-base-arraylike2object' );\nvar sqrt = require( '@stdlib/math-base-special-sqrt' );\nvar abs = require( '@stdlib/math-base-special-abs' );\nvar pow = require( '@stdlib/math-base-special-pow' );\nvar accessors = require( './accessors.js' );\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} L2-norm\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2( 4, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gnrm2( N, x, stride, offset ) {\n\tvar scale;\n\tvar ssq;\n\tvar ax;\n\tvar ix;\n\tvar o;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, stride, offset );\n\t}\n\n\tix = offset;\n\tif ( N === 1 ) {\n\t\treturn abs( x[ ix ] );\n\t}\n\tif ( stride === 0 ) {\n\t\treturn sqrt( N ) * abs( x[ ix ] );\n\t}\n\tscale = 0.0;\n\tssq = 1.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( x[ ix ] !== 0.0 ) {\n\t\t\tax = abs( x[ ix ] );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = 1.0 + ( ssq * pow( scale/ax, 2 ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq += pow( ax/scale, 2 );\n\t\t\t}\n\t\t}\n\t\tix += stride;\n\t}\n\treturn scale * sqrt( ssq );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gnrm2;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {PositiveInteger} stride - stride length\n* @returns {number} L2-norm\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var z = gnrm2( x.length, x, 1 );\n* // returns 3.0\n*/\nfunction gnrm2( N, x, stride ) {\n\treturn ndarray( N, x, stride, stride2offset( N, stride ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = gnrm2;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the L2-norm of a vector.\n*\n* @module @stdlib/blas-base-gnrm2\n*\n* @example\n* var gnrm2 = require( '@stdlib/blas-base-gnrm2' );\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var z = gnrm2( x.length, x, 1 );\n* // returns 3.0\n*\n* @example\n* var gnrm2 = require( '@stdlib/blas-base-gnrm2' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2.ndarray( 4, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar main = require( './main.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,gCAAiC,EACjDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EA0BnD,SAASC,EAAOC,EAAGC,EAAGC,EAAQC,EAAS,CACtC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAMJ,GAJAL,EAAMJ,EAAE,KACRK,EAAML,EAAE,UAAW,CAAE,EAErBQ,EAAKN,EACAH,IAAM,EACV,OAAOH,EAAKS,EAAKD,EAAKI,CAAG,CAAE,EAE5B,GAAKP,IAAW,EACf,OAAON,EAAMI,CAAE,EAAIH,EAAKS,EAAKD,EAAKI,CAAG,CAAE,EAIxC,IAFAL,EAAQ,EACRG,EAAM,EACAG,EAAI,EAAGA,EAAIV,EAAGU,IACdJ,EAAKD,EAAKI,CAAG,IAAM,IACvBD,EAAKX,EAAKS,EAAKD,EAAKI,CAAG,CAAE,EACpBL,EAAQI,GACZD,EAAM,EAAQA,EAAMT,EAAKM,EAAMI,EAAI,CAAE,EACrCJ,EAAQI,GAERD,GAAOT,EAAKU,EAAGJ,EAAO,CAAE,GAG1BK,GAAMP,EAEP,OAAOE,EAAQR,EAAMW,CAAI,CAC1B,CAKAZ,EAAO,QAAUI,ICzFjB,IAAAY,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAmB,QAAS,qCAAsC,EAClEC,EAAO,QAAS,gCAAiC,EACjDC,EAAM,QAAS,+BAAgC,EAC/CC,EAAM,QAAS,+BAAgC,EAC/CC,EAAY,IAoBhB,SAASC,EAAOC,EAAGC,EAAGC,EAAQC,EAAS,CACtC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,MAAO,GAIR,GADAQ,EAAId,EAAkBO,CAAE,EACnBO,EAAE,iBACN,OAAOV,EAAWE,EAAGQ,EAAGN,EAAQC,CAAO,EAIxC,GADAI,EAAKJ,EACAH,IAAM,EACV,OAAOJ,EAAKK,EAAGM,CAAG,CAAE,EAErB,GAAKL,IAAW,EACf,OAAOP,EAAMK,CAAE,EAAIJ,EAAKK,EAAGM,CAAG,CAAE,EAIjC,IAFAH,EAAQ,EACRC,EAAM,EACAI,EAAI,EAAGA,EAAIT,EAAGS,IACdR,EAAGM,CAAG,IAAM,IAChBD,EAAKV,EAAKK,EAAGM,CAAG,CAAE,EACbH,EAAQE,GACZD,EAAM,EAAQA,EAAMR,EAAKO,EAAME,EAAI,CAAE,EACrCF,EAAQE,GAERD,GAAOR,EAAKS,EAAGF,EAAO,CAAE,GAG1BG,GAAML,EAEP,OAAOE,EAAQT,EAAMU,CAAI,CAC1B,CAKAZ,EAAO,QAAUM,IC1FjB,IAAAW,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAmBd,SAASC,EAAOC,EAAGC,EAAGC,EAAS,CAC9B,OAAOJ,EAASE,EAAGC,EAAGC,EAAQL,EAAeG,EAAGE,CAAO,CAAE,CAC1D,CAKAN,EAAO,QAAUG,ICLjB,IAAII,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtC,OAAO,QAAUD",
  "names": ["require_accessors", "__commonJSMin", "exports", "module", "sqrt", "abs", "pow", "gnrm2", "N", "x", "stride", "offset", "scale", "buf", "get", "ssq", "ax", "ix", "i", "require_ndarray", "__commonJSMin", "exports", "module", "arraylike2object", "sqrt", "abs", "pow", "accessors", "gnrm2", "N", "x", "stride", "offset", "scale", "ssq", "ax", "ix", "o", "i", "require_main", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "gnrm2", "N", "x", "stride", "setReadOnly", "main", "ndarray"]
}
