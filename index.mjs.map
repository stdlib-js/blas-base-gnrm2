{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/accessors.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport arraylike2object from '@stdlib/array-base-arraylike2object';\nimport sqrt from '@stdlib/math-base-special-sqrt';\nimport abs from '@stdlib/math-base-special-abs';\nimport pow from '@stdlib/math-base-special-pow';\nimport accessors from './accessors.js';\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} L2-norm\n*\n* @example\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2( 4, x, 2, 1 );\n* // returns 5.0\n*/\nfunction gnrm2( N, x, stride, offset ) {\n\tvar scale;\n\tvar ssq;\n\tvar ax;\n\tvar ix;\n\tvar o;\n\tvar i;\n\n\tif ( N <= 0 ) {\n\t\treturn 0.0;\n\t}\n\n\to = arraylike2object( x );\n\tif ( o.accessorProtocol ) {\n\t\treturn accessors( N, o, stride, offset );\n\t}\n\n\tix = offset;\n\tif ( N === 1 ) {\n\t\treturn abs( x[ ix ] );\n\t}\n\tif ( stride === 0 ) {\n\t\treturn sqrt( N ) * abs( x[ ix ] );\n\t}\n\tscale = 0.0;\n\tssq = 1.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( x[ ix ] !== 0.0 ) {\n\t\t\tax = abs( x[ ix ] );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = 1.0 + ( ssq * pow( scale/ax, 2 ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq += pow( ax/scale, 2 );\n\t\t\t}\n\t\t}\n\t\tix += stride;\n\t}\n\treturn scale * sqrt( ssq );\n}\n\n\n// EXPORTS //\n\nexport default gnrm2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport sqrt from '@stdlib/math-base-special-sqrt';\nimport abs from '@stdlib/math-base-special-abs';\nimport pow from '@stdlib/math-base-special-pow';\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @private\n* @param {PositiveInteger} N - number of indexed elements\n* @param {Object} x - input array object\n* @param {Collection} x.data - input array data\n* @param {Array<Function>} x.accessors - array element accessors\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} L2-norm\n*\n* @example\n* import toAccessorArray from '@stdlib/array-base-to-accessor-array';\n* import arraylike2object from '@stdlib/array-base-arraylike2object';\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2( 4, arraylike2object( toAccessorArray( x ) ), 2, 1 );\n* // returns 5.0\n*/\nfunction gnrm2( N, x, stride, offset ) {\n\tvar scale;\n\tvar buf;\n\tvar get;\n\tvar ssq;\n\tvar ax;\n\tvar ix;\n\tvar i;\n\n\tbuf = x.data;\n\tget = x.accessors[ 0 ];\n\n\tix = offset;\n\tif ( N === 1 ) {\n\t\treturn abs( get( buf, ix ) );\n\t}\n\tif ( stride === 0 ) {\n\t\treturn sqrt( N ) * abs( get( buf, ix ) );\n\t}\n\tscale = 0.0;\n\tssq = 1.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tif ( get( buf, ix ) !== 0.0 ) {\n\t\t\tax = abs( get( buf, ix ) );\n\t\t\tif ( scale < ax ) {\n\t\t\t\tssq = 1.0 + ( ssq * pow( scale/ax, 2 ) );\n\t\t\t\tscale = ax;\n\t\t\t} else {\n\t\t\t\tssq += pow( ax/scale, 2 );\n\t\t\t}\n\t\t}\n\t\tix += stride;\n\t}\n\treturn scale * sqrt( ssq );\n}\n\n\n// EXPORTS //\n\nexport default gnrm2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the L2-norm of a vector.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {NumericArray} x - input array\n* @param {PositiveInteger} stride - stride length\n* @returns {number} L2-norm\n*\n* @example\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var z = gnrm2( x.length, x, 1 );\n* // returns 3.0\n*/\nfunction gnrm2( N, x, stride ) {\n\treturn ndarray( N, x, stride, stride2offset( N, stride ) );\n}\n\n\n// EXPORTS //\n\nexport default gnrm2;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the L2-norm of a vector.\n*\n* @module @stdlib/blas-base-gnrm2\n*\n* @example\n* import gnrm2 from '@stdlib/blas-base-gnrm2';\n*\n* var x = [ 1.0, -2.0, 2.0 ];\n*\n* var z = gnrm2( x.length, x, 1 );\n* // returns 3.0\n*\n* @example\n* import gnrm2 from '@stdlib/blas-base-gnrm2';\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ];\n*\n* var z = gnrm2.ndarray( 4, x, 2, 1 );\n* // returns 5.0\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport main from './main.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( main, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default main;\n"],"names":["gnrm2","N","x","stride","offset","scale","ssq","ax","ix","o","i","arraylike2object","accessorProtocol","buf","get","data","accessors","abs","sqrt","pow","ndarray","stride2offset","setReadOnly","main"],"mappings":";;omBA8CA,SAASA,EAAOC,EAAGC,EAAGC,EAAQC,GAC7B,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKT,GAAK,EACT,OAAO,EAIR,IADAQ,EAAIE,EAAkBT,IACfU,iBACN,OCVF,SAAgBX,EAAGC,EAAGC,EAAQC,GAC7B,IAAIC,EACAQ,EACAC,EACAR,EACAC,EACAC,EACAE,EAMJ,GAJAG,EAAMX,EAAEa,KACRD,EAAMZ,EAAEc,UAAW,GAEnBR,EAAKJ,EACM,IAANH,EACJ,OAAOgB,EAAKH,EAAKD,EAAKL,IAEvB,GAAgB,IAAXL,EACJ,OAAOe,EAAMjB,GAAMgB,EAAKH,EAAKD,EAAKL,IAInC,IAFAH,EAAQ,EACRC,EAAM,EACAI,EAAI,EAAGA,EAAIT,EAAGS,IACK,IAAnBI,EAAKD,EAAKL,KAETH,GADLE,EAAKU,EAAKH,EAAKD,EAAKL,MAEnBF,EAAM,EAAQA,EAAMa,EAAKd,EAAME,EAAI,GACnCF,EAAQE,GAERD,GAAOa,EAAKZ,EAAGF,EAAO,IAGxBG,GAAML,EAEP,OAAOE,EAAQa,EAAMZ,EACtB,CDxBSU,CAAWf,EAAGQ,EAAGN,EAAQC,GAIjC,GADAI,EAAKJ,EACM,IAANH,EACJ,OAAOgB,EAAKf,EAAGM,IAEhB,GAAgB,IAAXL,EACJ,OAAOe,EAAMjB,GAAMgB,EAAKf,EAAGM,IAI5B,IAFAH,EAAQ,EACRC,EAAM,EACAI,EAAI,EAAGA,EAAIT,EAAGS,IACF,IAAZR,EAAGM,KAEFH,GADLE,EAAKU,EAAKf,EAAGM,MAEZF,EAAM,EAAQA,EAAMa,EAAKd,EAAME,EAAI,GACnCF,EAAQE,GAERD,GAAOa,EAAKZ,EAAGF,EAAO,IAGxBG,GAAML,EAEP,OAAOE,EAAQa,EAAMZ,EACtB,CE3CA,SAASN,EAAOC,EAAGC,EAAGC,GACrB,OAAOiB,EAASnB,EAAGC,EAAGC,EAAQkB,EAAepB,EAAGE,GACjD,CCOAmB,EAAAC,EAAA,UAAAH"}